# 2. 크기비교 함수
#print(max(3,16,9)) #max함수는 숫자중에서 가장 큰 값을 반환
#print빼고 max만 입력해도 에러는 없으나 반환 불가능
#print(min(0,3,-8,7)) #min함수는 숫자중에서 가장 작은 값을 반환

#3. 연산 함수
#sum 함수는 sum([]) 형식으로 사용하며[]안에 숫자를 모두 더해서 반환
#print(sum([10,20,30]))

#pow 함수는 pow(x,y) 형식으로 사용하고 x^y 값을 구해서 반환하는 함수
#**(제곱연산자)와 동일한 효과 입니다
#print(pow(2,4))
#pow(x,y,z) 형식을 사용하면 x^y값을 구하고 z로 나눈 나머지 값을 반환
#print(pow(2,4,3))

#divmod함수는 divmod(x,y)형식으로 사용하며 x를 y로 나눈 후 결과를(몫,나머지)값으로 반환
#(x//y,x%y)와 동일합니다
#print(divmod(9,2))

#abs함수는 abs(x)를 사용하고 x의 절대값을 구해서 반환하는 함수
#print(abs(-1))
#print빼고 abs만 입력해도 에러는 없으나 반환 불가능

#국어 : 82, 영어 : 77, 수학 : 64, 과학 : 87
#어떤 과목을 제일 잘하였고, 제일 못했는가
# print(max(82,77,64,87))
# print(min(82,77,64,87))
# print('제일 높은 점수 :',max(82,77,64,87))
# print('제일 낮은 점수 :',min(82,77,64,87))
#과목의 총합을 구하시오
# print(sum([82,77,64,87]))
# print('총합 :',sum([82,77,64,87]))
#과목의 평균의 몫과 나머지
#print(divmod(sum([82,77,64,87]),4))
#3,4,-8,-5에서 절대값으로 큰 값에서 작은 값의 거듭제곱
#print(pow(max(3,4,(abs(-8)),(abs(-5))),min(3,4,(abs(-8)),(abs(-5)))))

#문자열
#문자열은 숫자를 제외한 모든 문자, 단어, 기호들로 구성된 것을 의미

#escape문자 - 문자열을 제어하는 효과를 가지고 있는 문자(숫자열 사용 불가)
#이스케이프 문자는 \로 시작을 합니다

#\n
# 한줄 개행하는 효과를 가지고 있는 이스케이프 문자
#print('안녕하세요\n반갑습니다')

#\t - 8칸 공백을 만들어주는 이스케이프 문자(tab키와 동일)
# print('a\tbcd')7칸공백
# print('abc\td')5칸공백
# print('abcdefgh\ti')8칸공백

#\" - "를 문자열로 사용하고 싶을 때 사용하는 이스케이프 문자
# print("\"안녕하세요\"라고 말했다")
#\'를 문자열로 사용하고 싶을 때 사용하는 이스케이프 문자
#print('\'안녕하세요\'라고 말했다')
#\\ - \를 문자열로 사용하고 싶을 때 사용하는 이스케이프 문자
# print("아이스 아메리카노는 1500\\입니다")
# print("아이스 아메리카노는 1500\\1입니다")

#문자열 연산
#문자열 더하기
# print("부산"+"시장")
# print("hello"+"hi")

#문자열 곱하기
#문자열은 숫자와 곱하기 연산이 가능합니다(문자열끼리 곱하기는 에러)
# print("*"*10)
# print("hello"*10)

#문자열에서 사용할 수 있는 함수
#sep함수
#sep함수는 구분함수 입니다
# print("010","1234","5678",sep="-")
# print("010","1234","5678",sep="\n")

#end함수
# print("a");print("b")
# print("a")print("b")(X)
#;-코드의 끝을 의미하는 함수
# print("a",end="")
# print("b")
# print("a",end="+")
# print("b")
#or print("a",end="+");print("b")

#문자열 포매팅(Formatting)(굉장히 중요함)
#문자열 안에서 내가 특정 자료형으로 바꾸고 싶을 때 사용하는 문법
#포매팅은 서식문자를 사용해서 포매팅을 할 수 있습니다
# print("과자는 1500원 입니다")
# print("과자는 %d원 입니다"%1500)
# print("과자는 {}원 입니다".format(1500))

#서식문자 - 지정된 값을 여러가지 형태로 출력해주는 문자
#서식문자는 %로 시작합니다

#%d - 10진수 정수 형태의 값을 사용하고 싶을 때 사용하는 서식문자(실수형태X)
# print("키 : %d"%175)
# print("키 : %d"%175.5) #%에 실수를 넣으면 정수에 해당하는 부분만 출력